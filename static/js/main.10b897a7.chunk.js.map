{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/NotFoundPage.tsx","pages/HomePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTable","people","useParams","map","motherName","fatherName","born","died","mother","father","ifNoMotherLink","ifNoFatherLink","PeoplePage","useState","setPeople","isLoading","setIsLoading","isInitialized","setIsInitialized","isError","setIsError","loadPeople","serverResp","onlyWithParents","find","m","f","useEffect","isNoPeopleOnServer","length","NotFoundPage","HomePage","Navbar","role","isActive","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.10b897a7.chunk.js","sourcesContent":["import { Person } from './types/Person';\r\n\r\n// eslint-disable-next-line max-len\r\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\r\n\r\nfunction wait(delay: number) {\r\n  return new Promise(resolve => setTimeout(resolve, delay));\r\n}\r\n\r\nexport function getPeople(): Promise<Person[]> {\r\n  // keep this delay for testing purpose\r\n  return wait(500)\r\n    .then(() => fetch(API_URL))\r\n    .then(response => response.json());\r\n}\r\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types/Person';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams<{ slug: string }>();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            motherName,\n            fatherName,\n            born,\n            died,\n            mother,\n            father,\n          } = person;\n          const ifNoMotherLink = motherName || '-';\n          const ifNoFatherLink = fatherName || '-';\n\n          return (\n            <tr\n              key={person.slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': person.slug === slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>\n                {mother ? <PersonLink person={mother} /> : ifNoMotherLink}\n              </td>\n              <td>\n                {father ? <PersonLink person={father} /> : ifNoFatherLink}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeople = async () => {\n    setIsLoading(true);\n    setIsInitialized(false);\n    setIsError(false);\n    try {\n      const serverResp = await getPeople();\n      const onlyWithParents = serverResp.map((person) => {\n        const mother = serverResp.find(m => m.name === person.motherName);\n        const father = serverResp.find(f => f.name === person.fatherName);\n\n        return (\n          {\n            ...person,\n            mother,\n            father,\n          }\n        );\n      });\n\n      setPeople(onlyWithParents);\n      setIsInitialized(true);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const isNoPeopleOnServer = isInitialized && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length > 0 && (\n            <PeopleTable people={people} />\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"people\"\n          className={({ isActive }) => classNames(\n            'navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            },\n          )}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './App.scss';\nimport React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { HomePage } from './pages/HomePage';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"people\" element={<PeoplePage />}>\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}